syntax = "proto3";

                 package property;
service PropertyService {
 rpc createProperty (PropertyCreateInput) returns (Property) {}
rpc properties (findManyParams) returns (stream Property) {}
rpc property (PropertyWhereUniqueInput) returns (Property) {}
rpc updateProperty (PropertyUpdateInput) returns (Property) {}
rpc deleteProperty (PropertyWhereUniqueInput) returns (Property) {}
rpc findManyProperty (PropertyWhereUniqueInput) returns (stream CommonFacility) {}
rpc updateProperty (CommonFacilityParams) returns (stream CommonFacility) {}
rpc connectProperty (CommonFacilityParams) returns (CommonFacility) {}
rpc disconnectProperty (CommonFacilityParams) returns (CommonFacility) {}
rpc findManyPropertyId (PropertyWhereUniqueInput) returns (stream CondoUnit) {}
rpc updatePropertyId (CondoUnitParams) returns (stream CondoUnit) {}
rpc connectPropertyId (CondoUnitParams) returns (CondoUnit) {}
rpc disconnectPropertyId (CondoUnitParams) returns (CondoUnit) {}
rpc findManyProperty (PropertyWhereUniqueInput) returns (stream File) {}
rpc updateProperty (FileParams) returns (stream File) {}
rpc connectProperty (FileParams) returns (File) {}
rpc disconnectProperty (FileParams) returns (File) {}
rpc findManyProperty (PropertyWhereUniqueInput) returns (stream Locker) {}
rpc updateProperty (LockerParams) returns (stream Locker) {}
rpc connectProperty (LockerParams) returns (Locker) {}
rpc disconnectProperty (LockerParams) returns (Locker) {}
rpc findManyProperty (PropertyWhereUniqueInput) returns (stream ParkingSpot) {}
rpc updateProperty (ParkingSpotParams) returns (stream ParkingSpot) {}
rpc connectProperty (ParkingSpotParams) returns (ParkingSpot) {}
rpc disconnectProperty (ParkingSpotParams) returns (ParkingSpot) {}
rpc findManyProperty (PropertyWhereUniqueInput) returns (stream Request) {}
rpc updateProperty (RequestParams) returns (stream Request) {}
rpc connectProperty (RequestParams) returns (Request) {}
rpc disconnectProperty (RequestParams) returns (Request) {} 
 }
message PropertyCreateInput {
string address = 1;
repeated CommonFacility commonFacilities = 2;
repeated CondoUnit condoUnits = 3;
string createdAt = 4;
repeated File files = 5;
int32 id = 6;
int32 lockerCount = 7;
repeated Locker Lockers = 8;
string name = 9;
int32 parkingCount = 10;
repeated ParkingSpot ParkingSpots = 11;
repeated Request requests = 12;
int32 unitCount = 13;
string updatedAt = 14;
};
message Property {
string address = 1;
repeated CommonFacility commonFacilities = 2;
repeated CondoUnit condoUnits = 3;
string createdAt = 4;
repeated File files = 5;
int32 id = 6;
int32 lockerCount = 7;
repeated Locker Lockers = 8;
string name = 9;
int32 parkingCount = 10;
repeated ParkingSpot ParkingSpots = 11;
repeated Request requests = 12;
int32 unitCount = 13;
string updatedAt = 14;
};
message PropertyWhereUniqueInput {
string address = 1;
repeated CommonFacility commonFacilities = 2;
repeated CondoUnit condoUnits = 3;
string createdAt = 4;
repeated File files = 5;
int32 id = 6;
int32 lockerCount = 7;
repeated Locker Lockers = 8;
string name = 9;
int32 parkingCount = 10;
repeated ParkingSpot ParkingSpots = 11;
repeated Request requests = 12;
int32 unitCount = 13;
string updatedAt = 14;
};
message PropertyUpdateInput {
string address = 1;
repeated CommonFacility commonFacilities = 2;
repeated CondoUnit condoUnits = 3;
string createdAt = 4;
repeated File files = 5;
int32 id = 6;
int32 lockerCount = 7;
repeated Locker Lockers = 8;
string name = 9;
int32 parkingCount = 10;
repeated ParkingSpot ParkingSpots = 11;
repeated Request requests = 12;
int32 unitCount = 13;
string updatedAt = 14;
};
message findManyParams {

};
message CommonFacility {
string createdAt = 1;
repeated string facilityType = 2;
string id = 3;
string status = 4;
string updatedAt = 5;
};
message CommonFacilityWhereUniqueInput {
string createdAt = 1;
repeated string facilityType = 2;
string id = 3;
string status = 4;
string updatedAt = 5;
};
message CommonFacilityParams {
PropertyWhereUniqueInput propertyWhereUniqueInput = 1;
CommonFacilityWhereUniqueInput commonfacilityWhereUniqueInput = 2;
};
message CondoUnit {
int32 condoFee = 1;
string createdAt = 2;
int32 id = 3;
bool isPaid = 4;
string size = 5;
string test = 6;
string unitNumber = 7;
string updatedAt = 8;
};
message CondoUnitWhereUniqueInput {
int32 condoFee = 1;
string createdAt = 2;
int32 id = 3;
bool isPaid = 4;
string size = 5;
string test = 6;
string unitNumber = 7;
string updatedAt = 8;
};
message CondoUnitParams {
PropertyWhereUniqueInput propertyWhereUniqueInput = 1;
CondoUnitWhereUniqueInput condounitWhereUniqueInput = 2;
};
message File {
string bucket = 1;
string createdAt = 2;
int32 id = 3;
string name = 4;
string updatedAt = 5;
};
message FileWhereUniqueInput {
string bucket = 1;
string createdAt = 2;
int32 id = 3;
string name = 4;
string updatedAt = 5;
};
message FileParams {
PropertyWhereUniqueInput propertyWhereUniqueInput = 1;
FileWhereUniqueInput fileWhereUniqueInput = 2;
};
message Locker {
string createdAt = 1;
int32 id = 2;
string updatedAt = 3;
};
message LockerWhereUniqueInput {
string createdAt = 1;
int32 id = 2;
string updatedAt = 3;
};
message LockerParams {
PropertyWhereUniqueInput propertyWhereUniqueInput = 1;
LockerWhereUniqueInput lockerWhereUniqueInput = 2;
};
message ParkingSpot {
string createdAt = 1;
int32 id = 2;
string updatedAt = 3;
};
message ParkingSpotWhereUniqueInput {
string createdAt = 1;
int32 id = 2;
string updatedAt = 3;
};
message ParkingSpotParams {
PropertyWhereUniqueInput propertyWhereUniqueInput = 1;
ParkingSpotWhereUniqueInput parkingspotWhereUniqueInput = 2;
};
message Request {
string createdAt = 1;
string elevator = 2;
string id = 3;
string key = 4;
string question = 5;
string reportMessage = 6;
repeated string requestType = 7;
string response = 8;
repeated string status = 9;
string updatedAt = 10;
};
message RequestWhereUniqueInput {
string createdAt = 1;
string elevator = 2;
string id = 3;
string key = 4;
string question = 5;
string reportMessage = 6;
repeated string requestType = 7;
string response = 8;
repeated string status = 9;
string updatedAt = 10;
};
message RequestParams {
PropertyWhereUniqueInput propertyWhereUniqueInput = 1;
RequestWhereUniqueInput requestWhereUniqueInput = 2;
};