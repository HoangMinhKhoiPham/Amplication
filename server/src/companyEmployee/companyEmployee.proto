syntax = "proto3";

                 package companyEmployee;
service CompanyEmployeeService {
 rpc createCompanyEmployee (CompanyEmployeeCreateInput) returns (CompanyEmployee) {}
rpc companyEmployees (findManyParams) returns (stream CompanyEmployee) {}
rpc companyEmployee (CompanyEmployeeWhereUniqueInput) returns (CompanyEmployee) {}
rpc updateCompanyEmployee (CompanyEmployeeUpdateInput) returns (CompanyEmployee) {}
rpc deleteCompanyEmployee (CompanyEmployeeWhereUniqueInput) returns (CompanyEmployee) {}
rpc findManyEmployee (CompanyEmployeeWhereUniqueInput) returns (stream Request) {}
rpc updateEmployee (RequestParams) returns (stream Request) {}
rpc connectEmployee (RequestParams) returns (Request) {}
rpc disconnectEmployee (RequestParams) returns (Request) {} 
 }
message CompanyEmployeeCreateInput {
int32 id = 1;
repeated Request requests = 2;
};
message CompanyEmployee {
int32 id = 1;
repeated Request requests = 2;
};
message CompanyEmployeeWhereUniqueInput {
int32 id = 1;
repeated Request requests = 2;
};
message CompanyEmployeeUpdateInput {
int32 id = 1;
repeated Request requests = 2;
};
message findManyParams {

};
message Request {
string comment = 1;
string createdAt = 2;
string elevator = 3;
string id = 4;
string key = 5;
string question = 6;
repeated string requestType = 7;
string response = 8;
repeated string status = 9;
string updatedAt = 10;
};
message RequestWhereUniqueInput {
string comment = 1;
string createdAt = 2;
string elevator = 3;
string id = 4;
string key = 5;
string question = 6;
repeated string requestType = 7;
string response = 8;
repeated string status = 9;
string updatedAt = 10;
};
message RequestParams {
CompanyEmployeeWhereUniqueInput companyEmployeeWhereUniqueInput = 1;
RequestWhereUniqueInput requestWhereUniqueInput = 2;
};